generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  password        String
  name            String?
  image           String?
  createdAt       DateTime  @default(now())
  emailVerified   Boolean   @default(false)
  updatedAt       DateTime  @default(now())
  goals           Goal[]
  writtenJournals Journal[] @relation("JournalToUser")
  accounts        Account[]
  sessions        Session[]
  sharedJournals  Journal[] @relation("journalSharedWith")

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Journal {
  id             String   @id @default(uuid())
  title          String
  emotion        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  authorId       String
  content        String
  recommendation String?
  author         User     @relation("JournalToUser", fields: [authorId], references: [id])
  sharedWith     User[]   @relation("journalSharedWith")
}

/// @model
model Goal {
  id        String   @id @default(uuid())
  type      String
  target    Int
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, type])
  @@map("goal")
}
